<p>
  <strong>Id #:</strong>
  <%= @game_state.game.guid %>
</p>

<p id="current-players">
  <b>Players:</b>
  <% @game_state.siblings.each do |player_state| %>
    <br>
    <span style="<%= 'color: green;' if player_state.is_my_turn %>">
      <%= player_state.player.email %>
    </span>
    <% if player_state.player.id == current_player.id %>
      <b>(me)</b>
      <% if player_state.is_my_turn %>
         <%= button_to 'End Turn', end_turn_path(@game_state) %>
      <% end %>
    <% end %>
    <% unless @game_state.game.has_started %>
      <% if player_state.is_ready %>
         <span style="color: green;">Ready!</span>
      <% end %>
      <% if player_state.player.id == current_player.id && !player_state.is_ready %>
         <%= button_to 'Ready', ready_path(@game_state) %>
      <% end %>
    <% end %>
  <% end %>
</p>

<section id="game-state">
   <% if @game_state.game.has_started %>

      <!-- SCRAP FORM -->
      <p>
         <b>Take Scrap:</b>
         <%= form_tag("/game_states/#{@game_state.id}/draw/scrap", remote: true) do %>
            <%= token_tag nil %>
            <select name="card_id">
               <option>Choose a scrap</option>
               <% Scrap.all.each do |scrap| %>
                  <option value="<%= scrap.id %>"><%= scrap.name %></option>
               <% end %>
            </select>
            <input type="submit" value="Draw"></input>
         <% end %>
      </p>

      <!-- BLUEPRINT FORM  -->
      <p>
         <b>Take Blueprint:</b>
         <%= form_tag("/game_states/#{@game_state.id}/draw/blueprint", remote: true) do %>
            <%= token_tag nil %>
            <select id="blueprint-select" name="card_id">
               <option>Choose a blueprint</option>
               <% @game_state.game.available_blueprints.each do |blueprint| %>
                  <option value="<%= blueprint.id %>">
                     <%= blueprint.scrapper_module.name %>
                  </option>
               <% end %>
            </select>
            <input type="submit" value="Draw"></input>
         <% end %>
      </p>

      <!-- RAW MATERIALS -->
      <p id="player-materials" style="color: red;">
         <b>Raw Materials:</b> <%= @game_state[:raw] || 0 %>
      </p>

      <!-- HELD SCRAPS -->
      <p style="color: gray;">
         <b>Held Scraps:</b>
         <ul id="held-scraps" style="color: gray;">
            <% @game_state.scrap_holds.each do |hold| %>
               <li>
                  <%= hold.scrap.name %> |
                  <%= button_to 'Use' %> |
                  <%= button_to 'Sell', sell_path(hold), remote: true %> |
                  <%= button_to 'Trade' %>
               </li>
            <% end %>
         </ul>
      <p>

      <!-- HELD BLUEPRINTS -->
      <p style="color: blue;">
         <b>Held Blueprints:</b>
         <ul id="held-blueprints" style="color: blue;">
            <% @game_state.blueprint_holds.each do |hold| %>
               <li>
                  <%= hold.blueprint.name %> |
                  <%= button_to 'Build' %> |
                  <%= button_to 'Trade' %> |
                  <%= button_to 'Discard' %>
               </li>
            <% end %>
         </ul>
      </p>

      <!-- HELD SCRAPPER MODULES -->
      <p style="color: green;">
         <b>Held Scrapper Modules:</b>
         <ul id="held-modules">
            <% @game_state.module_holds.each do |hold| %>
               <li>
                  <%= hold.scrapper_modules.name %> |
                  <%= button_to 'Trade' %>
               </li>
            <% end %>
         </ul>
      </p>
   <% end %>
</section>

<%= link_to 'Leave Game' %>

<script>
   var stateSource = new EventSource(
      "/game_states/" + <%= @game_state.id %> + ".json"
   );

   stateSource.addEventListener("update", function(event) {
      var data = JSON.parse(event.data);

      renderPlayers(data.players, data.started);

      if (data.started) {
         renderBlueprintSelect(data.available_blueprints);

         renderRawMaterials(data.raw);
         renderHeldScraps(data.scraps);
         renderHeldBlueprints(data.blueprints);
         renderHeldModules(data.scrapper_modules);
      }
   });

   function renderBlueprintSelect(blueprints) {
      if (blueprints && blueprints.length) {
         var blueprintFormHTML = "<option>Choose a blueprint</option>";

         for (var blueprint of blueprints) {
            blueprint = JSON.parse(blueprint);

            blueprintFormHTML +=
               "<option value='" +
               blueprint.id +
               "'>" +
               blueprint.name +
               "</option>"
         }

         $("#blueprint-select").html(blueprintFormHTML);
      }
   }

   function renderHeldScraps(scraps) {
      if (scraps && scraps.length) {
         var heldScrapsHTML = "";

         for (var scrap of scraps) {
            scrap = JSON.parse(scrap);

            heldScrapsHTML += "<li>" +
               scrap.name +
               ` | <%= button_to 'Use' %>` +
               ` | <%= button_to 'Sell' %>` +
               ` | <%= button_to 'Trade' %>` +
               "</li>"
         }

         $("#held-scraps").html(heldScrapsHTML);
      } else $("#held-scraps").html("No Held Scraps");
   }

   function renderHeldBlueprints(blueprints) {
      if (blueprints && blueprints.length) {
         var heldBlueprintsHTML = "";

         for (var blueprint of blueprints) {
            blueprint = JSON.parse(blueprint);

            heldBlueprintsHTML += "<li>" +
               blueprint.name +
               ` | <%= button_to 'Build' %>` +
               ` | <%= button_to 'Discard' %>` +
               ` | <%= button_to 'Trade' %>` +
               "</li>"
         }

         $("#held-blueprints").html(heldBlueprintsHTML);
      } else $("#held-blueprints").html("No Held Blueprints");
   }

   function renderHeldModules(modules) {
      if (modules && modules.length) {
         var heldModulesHTML = "";

         for (var scrapper_module of modules) {
            scrapper_module = JSON.parse(scrapper_module);

            heldModulesHTML += "<li>" +
               scrapper_module.name +
               ` | <%= button_to 'Trade' %>` +
               "</li>"
         }

         $("#held-modules").html(heldModulesHTML);
      } else $("#held-modules").html("No Held Modules");
   }

   function renderPlayers(players, game_started) {
      if (players) {
         var playerHTML = "<b>Players:</b>";

         for (var player of players) {
            playerHTML += "<br><span";
            playerHTML += player.is_my_turn ? " style='color: green;'>" : ">";
            playerHTML += player.email + "</span>";

            if (player.id === <%= current_player.id %>) {
               playerHTML += "<b>(me)</b>";

               if (player.is_my_turn) {
                  playerHTML += "<%= button_to 'End Turn', end_turn_path(@game_state) %>"
               }
            }

            if (!game_started) {
               if (player.is_ready) {
                  playerHTML += "<span style='color: green;'>Ready!</span>";
               }

               if (player.id === <%= current_player.id %> && !player.is_ready) {
                  playerHTML += "<%= button_to 'Ready', ready_path(@game_state) %>"
               }
            }
         }

         $("#current-players").html(playerHTML);
      }
   }

   function renderRawMaterials(raw) {
      if (raw) {
         var rawMaterialsHTML = "<b>Raw Materials:</b>" + data.raw;

         $("#player-materials").html(rawMaterialsHTML);
      }
   }
</script>
